[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://gimdlemafhte"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tvsxn"]
output_port_for_preview = 0
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_lb0v3"]
output_port_for_preview = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_dtif0"]
parameter_name = "foregroundColor"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_or8ka"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_erc45"]
parameter_name = "backgroundColor"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_k25ys"]
parameter_name = "depth"
default_value_enabled = true
default_value = 22.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_y6bwk"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 22.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_00yxq"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.5]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_th0vg"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_sspqw"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_bsled"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_42pk5"]
operator = 1

[resource]
code = "shader_type spatial;
uniform vec4 foregroundColor : source_color;
uniform vec4 backgroundColor : source_color;
uniform float depth = 22;



void vertex() {
// Input:3
	mat4 n_out3p0 = MODEL_MATRIX;


// Input:2
	vec3 n_out2p0 = VERTEX;


// TransformVectorMult:4
	vec3 n_out4p0 = (n_out3p0 * vec4(n_out2p0, 1.0)).xyz;


// VectorOp:5
	vec3 n_out5p0 = n_out4p0 - n_out2p0;


// Output:0
	COLOR.rgb = n_out5p0;


}

void fragment() {
// ColorParameter:4
	vec4 n_out4p0 = foregroundColor;


// ColorParameter:6
	vec4 n_out6p0 = backgroundColor;


// Input:2
	vec4 n_out2p0 = COLOR;


// VectorDecompose:3
	float n_out3p0 = vec3(n_out2p0.xyz).x;
	float n_out3p1 = vec3(n_out2p0.xyz).y;
	float n_out3p2 = vec3(n_out2p0.xyz).z;


// FloatParameter:7
	float n_out7p0 = depth;


// FloatOp:8
	float n_out8p0 = n_out3p2 / n_out7p0;


// FloatOp:9
	float n_in9p1 = 0.50000;
	float n_out9p0 = n_out8p0 + n_in9p1;


// Mix:5
	vec3 n_out5p0 = mix(vec3(n_out4p0.xyz), vec3(n_out6p0.xyz), vec3(n_out9p0));


// Output:0
	ALBEDO = n_out5p0;


}
"
graph_offset = Vector2(-818.682, 21.6746)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_th0vg")
nodes/vertex/2/position = Vector2(-1420, 460)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_sspqw")
nodes/vertex/3/position = Vector2(-1380, 180)
nodes/vertex/4/node = SubResource("VisualShaderNodeTransformVecMult_bsled")
nodes/vertex/4/position = Vector2(-560, 240)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorOp_42pk5")
nodes/vertex/5/position = Vector2(-140, 420)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 5, 0, 5, 0, 0, 6, 2, 0, 5, 1)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_tvsxn")
nodes/fragment/2/position = Vector2(-2260, 1060)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorDecompose_lb0v3")
nodes/fragment/3/position = Vector2(-1580, 1000)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_dtif0")
nodes/fragment/4/position = Vector2(-1360, -180)
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_or8ka")
nodes/fragment/5/position = Vector2(-80, -40)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_erc45")
nodes/fragment/6/position = Vector2(-1360, 140)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_k25ys")
nodes/fragment/7/position = Vector2(-2080, 440)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_y6bwk")
nodes/fragment/8/position = Vector2(-1020, 720)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_00yxq")
nodes/fragment/9/position = Vector2(-560, 540)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 5, 1, 8, 0, 9, 0, 3, 2, 8, 0, 7, 0, 8, 1, 9, 0, 5, 2, 5, 0, 0, 0)
